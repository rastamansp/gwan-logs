receivers:
  # OTLP receiver para receber telemetria
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver para métricas
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Processamento de traces
  batch:
    timeout: 1s
    send_batch_size: 1024

  # Filtros para dados sensíveis
  attributes:
    actions:
      - key: password
        action: delete
      - key: token
        action: delete
      - key: secret
        action: delete

  # Adiciona recursos aos dados
  resource:
    attributes:
      - key: environment
        value: "production"
        action: upsert
      - key: service.name
        value: "gwan-logs"
        action: upsert

exporters:
  # Debug exporter para logs
  debug:
    verbosity: detailed

  # Exporta traces para OTLP (que vai para Jaeger)
  otlp:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Exporta métricas para Prometheus
  prometheus:
    endpoint: 0.0.0.0:8889

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

service:
  pipelines:
    # Pipeline para traces
    traces:
      receivers: [otlp]
      processors: [batch, attributes, resource]
      exporters: [otlp, debug]

    # Pipeline para métricas
    metrics:
      receivers: [otlp, prometheus]
      processors: [batch, resource]
      exporters: [prometheus, debug]

    # Pipeline para logs
    logs:
      receivers: [otlp]
      processors: [batch, attributes, resource]
      exporters: [debug]

  extensions:
    - health_check
